#  Register definitions for slave core: AMC control/clock monitor
#
#  * File           : lib/amc.py
#  * Author         : auto-generated by wbgen2 from amc_fmon.wb
#  * Created        : Mon Nov 27 11:17:37 2017
#
#    THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE amc_fmon.wb
#    DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!
#

from WBreg import *

class Wbreg_amc(object):
    
    def __init__(self, baseaddr, readfun, writefun):
        
        self.p2p_0 = WBReadReg(0x0, 0xffffffff, baseaddr, readfun, writefun)
        
        self.p2p_1 = WBReadReg(0x1, 0xffffffff, baseaddr, readfun, writefun)
        
        self.p2p_2 = WBReadReg(0x2, 0xffffffff, baseaddr, readfun, writefun)
        
        self.p2p_3 = WBReadReg(0x3, 0xffffffff, baseaddr, readfun, writefun)
        
        self.oe = WBReadWriteReg(0x4, 0xffffffff, baseaddr, readfun, writefun)
        
        self.oe_p2p_out0 = WBReadWriteReg(0x4, 0x1, baseaddr, readfun, writefun)
        
        self.oe_p2p_out1 = WBReadWriteReg(0x4, 0x2, baseaddr, readfun, writefun)
        
        self.oe_p2p_out2 = WBReadWriteReg(0x4, 0x4, baseaddr, readfun, writefun)
        
        self.oe_p2p_out3 = WBReadWriteReg(0x4, 0x8, baseaddr, readfun, writefun)
        
        self.pipe2_0 = WBReadReg(0x5, 0xffffffff, baseaddr, readfun, writefun)
        
        self.pipe2_1 = WBReadReg(0x6, 0xffffffff, baseaddr, readfun, writefun)
        
        self.pipe2_2 = WBReadReg(0x7, 0xffffffff, baseaddr, readfun, writefun)
        
        self.pipe2_3 = WBReadReg(0x8, 0xffffffff, baseaddr, readfun, writefun)
        
        self.oe = WBReadWriteReg(0x9, 0xffffffff, baseaddr, readfun, writefun)
        
        self.oe_pipe2_out0 = WBReadWriteReg(0x9, 0x1, baseaddr, readfun, writefun)
        
        self.oe_pipe2_out1 = WBReadWriteReg(0x9, 0x2, baseaddr, readfun, writefun)
        
        self.oe_pipe2_out2 = WBReadWriteReg(0x9, 0x4, baseaddr, readfun, writefun)
        
        self.oe_pipe2_out3 = WBReadWriteReg(0x9, 0x8, baseaddr, readfun, writefun)
        
        self.tclka = WBReadReg(0xA, 0xffffffff, baseaddr, readfun, writefun)
        
        self.tclkc = WBReadReg(0xB, 0xffffffff, baseaddr, readfun, writefun)
        
        self.oe = WBReadWriteReg(0xC, 0xffffffff, baseaddr, readfun, writefun)
        
        self.oe_tclkb = WBReadWriteReg(0xC, 0x1, baseaddr, readfun, writefun)
        
        self.oe_tclkd = WBReadWriteReg(0xC, 0x2, baseaddr, readfun, writefun)
