#  Register definitions for slave core: AMC control/clock monitor
#
#  * File           : lib/amc.py
#  * Author         : auto-generated by wbgen2 from amc_fmon.wb
#  * Created        : Fri Nov 24 15:08:34 2017
#
#    THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE amc_fmon.wb
#    DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!
#

from WBreg import *

class Wbreg_amc(WBreg):
    
    def __init__(self, baseaddr, readfun, writefun):
        super(Wbreg_amc, self).__init__(baseaddr, readfun, writefun)
    
    def p2p_0_rd(self):
        return self.read(0x0, 0xffffffff)
    
    def p2p_1_rd(self):
        return self.read(0x1, 0xffffffff)
    
    def p2p_2_rd(self):
        return self.read(0x2, 0xffffffff)
    
    def p2p_3_rd(self):
        return self.read(0x3, 0xffffffff)
    
    def oe_rd(self):
        return self.read(0x4, 0xffffffff)
    
    def oe_wr(self, val):
        return self.write(0x4, 0xffffffff, val)
    
    def oe_p2p_out0_rd(self):
        return self.read(0x4, 0x1)
    
    def oe_p2p_out0_wr(self, val):
        return self.write(0x4, 0x1, val)
    
    def oe_p2p_out1_rd(self):
        return self.read(0x4, 0x2)
    
    def oe_p2p_out1_wr(self, val):
        return self.write(0x4, 0x2, val)
    
    def oe_p2p_out2_rd(self):
        return self.read(0x4, 0x4)
    
    def oe_p2p_out2_wr(self, val):
        return self.write(0x4, 0x4, val)
    
    def oe_p2p_out3_rd(self):
        return self.read(0x4, 0x8)
    
    def oe_p2p_out3_wr(self, val):
        return self.write(0x4, 0x8, val)
    
    def pipe2_0_rd(self):
        return self.read(0x5, 0xffffffff)
    
    def pipe2_1_rd(self):
        return self.read(0x6, 0xffffffff)
    
    def pipe2_2_rd(self):
        return self.read(0x7, 0xffffffff)
    
    def pipe2_3_rd(self):
        return self.read(0x8, 0xffffffff)
    
    def oe_rd(self):
        return self.read(0x9, 0xffffffff)
    
    def oe_wr(self, val):
        return self.write(0x9, 0xffffffff, val)
    
    def oe_pipe2_out0_rd(self):
        return self.read(0x9, 0x1)
    
    def oe_pipe2_out0_wr(self, val):
        return self.write(0x9, 0x1, val)
    
    def oe_pipe2_out1_rd(self):
        return self.read(0x9, 0x2)
    
    def oe_pipe2_out1_wr(self, val):
        return self.write(0x9, 0x2, val)
    
    def oe_pipe2_out2_rd(self):
        return self.read(0x9, 0x4)
    
    def oe_pipe2_out2_wr(self, val):
        return self.write(0x9, 0x4, val)
    
    def oe_pipe2_out3_rd(self):
        return self.read(0x9, 0x8)
    
    def oe_pipe2_out3_wr(self, val):
        return self.write(0x9, 0x8, val)
    
    def tclka_rd(self):
        return self.read(0xA, 0xffffffff)
    
    def tclkc_rd(self):
        return self.read(0xB, 0xffffffff)
    
    def oe_rd(self):
        return self.read(0xC, 0xffffffff)
    
    def oe_wr(self, val):
        return self.write(0xC, 0xffffffff, val)
    
    def oe_tclkb_rd(self):
        return self.read(0xC, 0x1)
    
    def oe_tclkb_wr(self, val):
        return self.write(0xC, 0x1, val)
    
    def oe_tclkd_rd(self):
        return self.read(0xC, 0x2)
    
    def oe_tclkd_wr(self, val):
        return self.write(0xC, 0x2, val)
